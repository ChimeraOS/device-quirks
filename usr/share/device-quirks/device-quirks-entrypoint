#/bin/bash

# Installation location is controlled via the DEVICE_QUIRKS_LOCATION env var

### SYSTEM IDENTIFICATION SCRIPT
export DQ_PATH=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
VENDOR="$(cat /sys/devices/virtual/dmi/id/board_vendor)"

### BOARD VENDOR DEVICE LISTS
AOK_LIST="AOKZOE"
ASUS_LIST="ASUSTeK COMPUTER INC."
ATARI_LIST="ATARI"
AYANEO_LIST="AYADEVICE:AYA NEO:AYANEO"
GPD_LIST="GPD"
LENOVO_LIST="LENOVO"
OXP_LIST="ONE-NETBOOK TECHNOLOGY CO., LTD."

### Checking for ACPI Entries for specifc hardware
echo "Checking ACPI Entries... "

if [ -d "/sys/bus/acpi/devices/AWDZ8830:00" ]; then
    echo "AW87559 ACPI Entry found! Starting Firmware downloader."
    $DQ_PATH/scripts/chips/aw87559/firmware.sh
fi

### Matching Vendors for Vendor specific fixes
echo "Checking Vendor for applicable quirk fixes... "

# AOKZOE Devices
if [[ ":$AOK_LIST:" =~ ":${VENDOR}:" ]]; then
    echo "AOKZOE Device Found!"
    $DQ_PATH/scripts/aokzoe/aokzoe_table.sh

# ASUS Devices
elif [[ ":$ASUS_LIST:" =~ ":${VENDOR}:" ]]; then
    echo "ASUS Device Found!"
    $DQ_PATH/scripts/asus/asus_table.sh

# ATARI Devices
elif [[ ":$ATARI_LIST:" =~ ":${VENDOR}:" ]]; then
    echo "ATARI Device Found!"
    $DQ_PATH/scripts/atari/atari_table.sh

# Aya Neo Devices
elif [[ ":$AYANEO_LIST:" =~ ":${VENDOR}:" ]]; then
    echo "AYANEO Device Found!"
    $DQ_PATH/scripts/ayaneo/ayaneo_table.sh

# GPD Devices
elif [[ ":$GPD_LIST:" =~ ":${VENDOR}:" ]]; then
    echo "GPD Device Found!"
    $DQ_PATH/scripts/gpd/gpd_table.sh

# LENOVO Devices
elif [[ ":$LENOVO_LIST:" =~ ":${VENDOR}:" ]]; then
    echo "LENOVO Device Found!"
    $DQ_PATH/scripts/lenovo/lenovo_table.sh

# OXP Devices
elif [[ ":$OXP_LIST:" =~ ":${VENDOR}:" ]]; then
    echo "OXP Device Found!"
    $DQ_PATH/scripts/oxp/oxp_table.sh

# Unrecognized Device
else
    echo "${VENDOR} does not have any supported models. Exiting."
fi

# This directory is the same for both mkinitcpio "acpi_override" hook and dracut
mkdir -p "/etc/initcpio/acpi_override"

# TODO: prefix /etc with something if needed
# setup dracut acpi_override for dracut
if [ -d "/etc/dracut.conf.d/" ]; then
    echo "acpi_override=yes" > "/etc/dracut.conf.d/acpi_override.conf"
    echo "acpi_table_dir=\"/etc/initcpio/acpi_override\"" >> "/etc/dracut.conf.d/acpi_override.conf"
fi

# setup dracut acpi_override for dracut
if [ -d "/etc/mkinitcpio.conf" ]; then
    if cat "/etc/mkinitcpio.conf" | grep -Fq "acpi_override"; then
        echo "[INFO] mkinitcpio has acpi_override already enabled"
    else
        if cat "/etc/mkinitcpio.conf" | grep -Fq "microcode" ; then
            echo "Appending acpi_override before microcode hook"
            sed -i 's|microcode|acpi_override microcode|g' file.txt
        else
            echo "[ERROR] microcode hook not found"
        fi
    fi
fi

# Run networking devices configuration script.
$DQ_PATH/scripts/netdev_config.sh
